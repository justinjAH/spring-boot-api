/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */


plugins {
	id 'org.springframework.boot' version '2.0.5.RELEASE'
	// Apply the java-library plugin to add support for Java Library
	id 'java'
	id 'checkstyle'
}

repositories {
    mavenCentral()
}

checkstyle {
	toolVersion "7.6.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
jacocoTestReport {
  // Connector service is removed since it will be removed next Sprint
  afterEvaluate {
      classDirectories = files(classDirectories.files.collect {
          fileTree(dir: it,
                  exclude: ['beanpackage/**', 'mainpackage/***', 'repositrypackage/***'])
      })
  }
}

jacocoTestCoverageVerification {
  afterEvaluate {
      classDirectories = files(classDirectories.files.collect {
          fileTree(dir: it,
                  exclude: ['beanpackage/**', 'mainpackage/***', 'repositrypackage/***'])
      })
  }
}

// to run coverage verification during the build (and fail when appropriate)
check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport
